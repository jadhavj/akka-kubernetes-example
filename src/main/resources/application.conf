# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

akka {

  actor-system = "ClusterSystem"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
      java = "akka.serialization.JavaSerializer"
    }
    serialization-bindings {
      "com.google.protobuf.Message" = proto
      "com.google.protobuf.GeneratedMessageLite" = proto
      "com.google.protobuf.GeneratedMessageV3" = proto
      "java.lang.String" = java
    }
    
     debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
	
	deployment {
		/worker/nodeWorkerRouter {
			router = consistent-hashing-pool
			cluster {
				enabled = on
				max-nr-of-instances-per-node = 1
				allow-local-routees = on
				use-role = ${NODE_ROLE}
			}
		}
	}
  }

  remote {
    transport-failure-detector {
      heartbeat-interval = 10s   # default 4s
      acceptable-heartbeat-pause = 15s  # default 10s
    }
    
    log-remote-lifecycle-events = on
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${HOST_NAME}
      port = 2551
    }
  }
  
  cluster {
	roles = [${NODE_ROLE}]
  }

}
akka.cluster.metrics.enabled=off
